{"version":3,"sources":["node_modules/vec-la-fp/dist/vec.module.js","node_modules/kandinsky-js/dist/kandinsky.js","node_modules/asc-engine/src/constants.js","node_modules/asc-engine/src/util.js","node_modules/asc-engine/src/GameState.js","node_modules/asc-engine/src/Input.js","node_modules/asc-engine/src/PubSub.js","node_modules/asc-engine/src/Renderer.js","node_modules/asc-engine/src/Game.js","node_modules/asc-engine/src/Area.js","node_modules/asc-engine/src/Tile.js","index.js"],"names":["require","vAdd","vDist","darkenHex","LAYERS","posFromGridIndex","Game","Area","Tile","vEqual","x","y","x2","y2","game","toGameArea","createScreenRegion","area","size","toTitleArea","toScoreArea","snake","tile","FG","body","dir","getHead","reset","food","pos","Math","floor","random","next","title","HUD","scoreTile","score","speed","FRAME_TIME","lastTime","Date","now","currentTime","UP","DOWN","LEFT","RIGHT","onUpdate","input","keyIsDown","head","targetPos","targetTile","getTile","hit","properties","includes","slice","some","p","i","length","oldPos","push","char","onDraw","renderer","clearBackground","setTileSize","grid","forEach","t","width","height","drawTile","pc","max","color","renderEffects","s","ceil","buffers","BG","cell","S","from","addProperty","F","tiles","gameArea","setGrid","setCurrentArea","start","subscribe"],"mappingszTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;eCxBsBA,OAAO,CAAC,WAAD;IAAtBC,gBAAAA;IAAMC,iBAAAA;;gBACOF,OAAO,CAAC,cAAD;IAApBG,sBAAAA;;gBAEUH,OAAO,CAAC,0BAAD;IAAjBI,mBAAAA;;gBACoBJ,OAAO,CAAC,qBAAD;IAA3BK,6BAAAA;;AACP,IAAMC,IAAI,GAAGN,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,qBAAD,CAApB;;AAEA,IAAMS,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA,MAAEC,CAAF;AAAA,MAAKC,CAAL;;AAAA;AAAA,MAAUC,EAAV;AAAA,MAAcC,EAAd;;AAAA,SAAsBH,CAAC,KAAKE,EAAN,IAAYD,C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","file":"snake.e31bb0bc.map","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// curry :: (a -> b -> ... -> n) -> (a -> b) -> (b -> ...) -> (... -> n)\nvar curry = function curry(fn) {\n  var curried = function curried() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length >= fn.length) {\n      return fn.apply(undefined, args);\n    }\n    return function () {\n      for (var _len2 = arguments.length, argsNext = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        argsNext[_key2] = arguments[_key2];\n      }\n\n      return curried.apply(undefined, args.concat(argsNext));\n    };\n  };\n  return curried;\n};\n\n// pipe :: (a -> b) -> (b -> ...) -> (... -> n)\nvar pipe = function pipe(fn1) {\n  for (var _len3 = arguments.length, functions = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    functions[_key3 - 1] = arguments[_key3];\n  }\n\n  return function () {\n    return functions.reduce(function (acc, fn) {\n      return fn(acc);\n    }, fn1.apply(undefined, arguments));\n  };\n};\n\n// compose :: (... -> n) -> (b -> ...) -> (a -> b)\nvar compose = function compose() {\n  for (var _len4 = arguments.length, functions = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    functions[_key4] = arguments[_key4];\n  }\n\n  return pipe.apply(undefined, _toConsumableArray(functions.reverse()));\n};\n\n// vAdd :: Vector -> Vector -> Vector\nvar vAdd = curry(function (v, v2) {\n  return [v[0] + v2[0], v[1] + v2[1]];\n});\n\n// vAdd3 :: Vector -> Vector -> Vector -> Vector\nvar vAdd3 = curry(function (v, v2, v3) {\n  return [v[0] + v2[0] + v3[0], v[1] + v2[1] + v3[1]];\n});\n\n// vAddAll :: [Vector] -> Vector\nvar vAddAll = function vAddAll(vs) {\n  return vs.reduce(vAdd, [0, 0]);\n};\n\n// vSub :: Vector -> Vector -> Vector\nvar vSub = curry(function (v, v2) {\n  return [v[0] - v2[0], v[1] - v2[1]];\n});\n\n// vSub3 :: Vector -> Vector -> Vector -> Vector\nvar vSub3 = curry(function (v, v2, v3) {\n  return [v[0] - v2[0] - v3[0], v[1] - v2[1] - v3[1]];\n});\n\n// vSubAll :: [Vector] -> Vector\nvar vSubAll = function vSubAll(vs) {\n  return vs.slice(1).reduce(vSub, vs.slice(0, 1)[0]);\n};\n\n// vMag :: Vector -> Number\nvar vMag = function vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\n// vNormal :: Vector -> Vector\nvar vNormal = function vNormal(v) {\n  return [-v[1], v[0]];\n};\n\n// vScale :: Number -> Vector\nvar vScale = curry(function (sc, v) {\n  return [v[0] * sc, v[1] * sc];\n});\n\n// vTowards :: Number -> Vector -> Vector -> Vector\nvar vTowards = curry(function (t, v1, v2) {\n  var d = vSub(v2, v1);\n  var sc = vMag(d) * t;\n  return vAdd(v1, vScale(sc, vNorm(d)));\n});\n\n// vLerp :: Vector -> Vector -> Number -> Vector\nvar vLerp = curry(function (v1, v2, t) {\n  return vTowards(t, v1, v2);\n});\n\n// vNorm :: Vector -> Vector\nvar vNorm = function vNorm(v) {\n  var mag = vMag(v);\n  return [v[0] / mag, v[1] / mag];\n};\n\n// mId :: Matrix\nvar mId = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n// vCreateMatrix :: Number -> Number -> Number -> Number -> Number -> Number -> Matrix\nvar vCreateMatrix = function vCreateMatrix() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var tx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var ty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  return [a, c, tx, b, d, ty, 0, 0, 1];\n};\n\n// vTransform :: Matrix -> Vector -> Vector\nvar vTransform = curry(function (m, v) {\n  return [v[0] * m[0] + v[1] * m[1] + m[2], v[0] * m[3] + v[1] * m[4] + m[5]];\n});\n\n// mCompose :: Matrix -> Matrix -> Matrix\nvar mCompose = curry(function (m, m2) {\n  return [m[0] * m2[0] + m[1] * m2[3] + m[2] * m2[6], m[0] * m2[1] + m[1] * m2[4] + m[2] * m2[7], m[0] * m2[2] + m[1] * m2[5] + m[2] * m2[8], m[3] * m2[0] + m[4] * m2[3] + m[5] * m2[6], m[3] * m2[1] + m[4] * m2[4] + m[5] * m2[7], m[3] * m2[2] + m[4] * m2[5] + m[5] * m2[8], m[6] * m2[0] + m[7] * m2[3] + m[8] * m2[6], m[6] * m2[1] + m[7] * m2[4] + m[8] * m2[7], m[6] * m2[2] + m[7] * m2[5] + m[8] * m2[8]];\n});\n\n// mRotate :: Number -> Matrix -> Matrix\nvar mRotate = function mRotate(a) {\n  return mCompose([Math.cos(a), -Math.sin(a), 0, Math.sin(a), Math.cos(a), 0, 0, 0, 1]);\n};\n\n// mTranslate :: Vector -> Matrix -> Matrix\nvar mTranslate = function mTranslate(v) {\n  return mCompose([1, 0, v[0], 0, 1, v[1], 0, 0, 1]);\n};\n\n// mScale :: Vector -> Matrix -> Matrix\nvar mScale = function mScale(v) {\n  return mCompose([v[0], 0, 0, 0, v[1], 0, 0, 0, 1]);\n};\n\n// mShear :: Vector -> Matrix -> Matrix\nvar mShear = function mShear(v) {\n  return mCompose([1, v[0], 0, v[1], 1, 0, 0, 0, 1]);\n};\n\n// vRotate :: Number -> Vector -> Vector\nvar vRotate = curry(function (a, v) {\n  return [v[0] * Math.cos(a) - v[1] * Math.sin(a), v[0] * Math.sin(a) + v[1] * Math.cos(a)];\n});\n\n// vRotatePointAround :: Number -> Vector -> Vector -> Vector\nvar vRotatePointAround = curry(function (a, cp, v) {\n  var v2 = vSub(v, cp);\n  return vAdd(cp, [v2[0] * Math.cos(a) - v2[1] * Math.sin(a), v2[0] * Math.sin(a) + v2[1] * Math.cos(a)]);\n});\n\n// vMidpoint :: Vector -> Vector -> Vector\nvar vMidpoint = curry(function (v, v2) {\n  return vScale(0.5, vAdd(v, v2));\n});\n\n// vAngle :: Number -> Vector\nvar vAngle = function vAngle(a) {\n  return [Math.cos(a), Math.sin(a)];\n};\n\n// vAlongAngle :: Number -> Number -> Vector\nvar vAlongAngle = curry(function (a, r, v) {\n  return compose(vAdd(v), vScale(r), vAngle)(a);\n});\n\n// vFastDist :: Vector -> Vector -> Number\nvar vFastDist = curry(function (v, v2) {\n  return Math.pow(v2[0] - v[0], 2) + Math.pow(v2[1] - v[1], 2);\n});\n\n// vDist :: Vector -> Vector -> Number\nvar vDist = curry(function (v, v2) {\n  return Math.hypot(v2[0] - v[0], v2[1] - v[1]);\n});\n\n// vDot :: Vector -> Vector -> Number\nvar vDot = curry(function (v, v2) {\n  return v[0] * v2[0] + v[1] * v2[1];\n});\n\n// vDet :: Matrix -> Number\nvar vDet = function vDet(m) {\n  return m[0] * m[4] - m[3] * m[1];\n};\n\nvar vec = {\n  add: vAdd,\n  add3: vAdd3,\n  addAll: vAddAll,\n  sub: vSub,\n  sub3: vSub3,\n  subAll: vSubAll,\n  mag: vMag,\n  normal: vNormal,\n  scale: vScale,\n  towards: vTowards,\n  lerp: vLerp,\n  norm: vNorm,\n  mId: mId,\n  createMatrix: vCreateMatrix,\n  transform: vTransform,\n  mCompose: mCompose,\n  mRotate: mRotate,\n  mTranslate: mTranslate,\n  mScale: mScale,\n  mShear: mShear,\n  rotate: vRotate,\n  rotatePointAround: vRotatePointAround,\n  midpoint: vMidpoint,\n  angle: vAngle,\n  alongAngle: vAlongAngle,\n  fastDist: vFastDist,\n  dist: vDist,\n  dot: vDot,\n  det: vDet\n};\n\n/* start exports */\nexports.default = vec;\nexports.vec = vec;\nexports.vAdd = vAdd;\nexports.vAdd3 = vAdd3;\nexports.vAddAll = vAddAll;\nexports.vSub = vSub;\nexports.vSub3 = vSub3;\nexports.vSubAll = vSubAll;\nexports.vMag = vMag;\nexports.vNormal = vNormal;\nexports.vScale = vScale;\nexports.vTowards = vTowards;\nexports.vLerp = vLerp;\nexports.vNorm = vNorm;\nexports.mId = mId;\nexports.vCreateMatrix = vCreateMatrix;\nexports.vTransform = vTransform;\nexports.mCompose = mCompose;\nexports.mRotate = mRotate;\nexports.mTranslate = mTranslate;\nexports.mScale = mScale;\nexports.mShear = mShear;\nexports.vRotate = vRotate;\nexports.vRotatePointAround = vRotatePointAround;\nexports.vMidpoint = vMidpoint;\nexports.vAngle = vAngle;\nexports.vAlongAngle = vAlongAngle;\nexports.vFastDist = vFastDist;\nexports.vDist = vDist;\nexports.vDot = vDot;\nexports.vDet = vDet;\n/* end exports */","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.kandinsky = {})));\n}(this, (function (exports) { 'use strict';\n\n  // curry :: (a -> b -> ... -> n) -> (a -> b) -> (b -> ...) -> (... -> n)\n  const curry = (fn) => {\n    const curried = (...args) => {\n      if (args.length >= fn.length) {\n        return fn(...args);\n      }\n      return (...argsNext) => curried(...args, ...argsNext);\n    };\n    return curried;\n  };\n\n  // pipe :: (a -> b) -> (b -> ...) -> (... -> n)\n  const pipe = (fn1, ...functions) =>\n    (...args) =>\n      functions.reduce((acc, fn) => fn(acc), fn1(...args));\n\n  // wrapValue :: Number -> Number -> Number -> Number\n  const wrapValue = curry((m, M, v) => {\n    if (v < m) {\n      const diff = M - v - 1;\n      return wrapValue(m, M, M - diff);\n    }\n    if (v > M) {\n      const diff = v - M - 1;\n      return wrapValue(m, M, m + diff);\n    }\n    return v;\n  });\n\n  // wrapNorm :: Number -> Number\n  const wrapNorm = wrapValue(0, 1);\n\n  // clamp :: Number -> Number -> Number\n  const clamp = curry((min, max, n) => {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  });\n\n  // clampNorm :: Int -> Int\n  const clampNorm = clamp(0, 1);\n\n  const padHex = hexStr => hexStr.length === 1 ? `0${hexStr}` : hexStr;\n\n  // rgb2hsl :: [Number, Number, Number] -> [Number, Number, Number]\n  const rgb2hsl = ([r, g, b]) => {\n    const nr = r / 255;\n    const ng = g / 255;\n    const nb = b / 255;\n\n    const max = Math.max(nr, ng, nb);\n    const min = Math.min(nr, ng, nb);\n    let h, s, l = (max + min) / 2;\n\n    if (max === min) {\n      h = 0;\n      s = 0;\n    } else {\n      const d = max - min;\n      s = (l > 0.5)\n        ? d / (2 - max - min)\n        : d / (max + min);\n\n      switch(max){\n        case nr:\n          h = (ng - nb) / d + (ng < nb ? 6 : 0);\n          break;\n\n        case ng:\n          h = (nb - nr) / d + 2;\n          break;\n\n        case nb:\n          h = (nr - ng) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n    return [h, s, l];\n  };\n\n  // hue2rgb :: Int -> Int -> Int -> Int\n  const hue2rgb = (p, q, t) => {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n\n    if (t < 1/6) return p + (q - p) * 6 * t;\n    if (t < 1/2) return q;\n    if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\n    return p;\n  };\n\n  // hsl2rgb :: [Number, Number, Number] -> [Number, Number, Number]\n  const hsl2rgb = ([h, s, l]) => {\n    let r, g, b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = (l < 0.5)\n          ? l * (1 + s)\n          : l + s - l * s;\n\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  };\n\n  // hex2rgb :: String -> [Number, Number, Number]\n  const hex2rgb = hex => {\n    const hs = hex[0] === '#' ? hex.slice(1) : hex;\n    return [\n      parseInt(hs[0] + hs[1], 16),\n      parseInt(hs[2] + hs[3], 16),\n      parseInt(hs[4] + hs[5], 16)\n    ];\n  };\n\n  // rgb2hex :: [Number, Number, Number] -> String\n  const rgb2hex = rgb => rgb.reduce((hex, c) => hex + padHex(c.toString(16)), '#');\n\n  // hex2hsl :: String -> [Number, Number, Number]\n  const hex2hsl = pipe(hex2rgb, rgb2hsl);\n\n  // hsl2hex :: [Number, Number, Number] -> String\n  const hsl2hex = pipe(hsl2rgb, rgb2hex);\n\n  // darkenRgb :: [Number, Number, Number] -> [Number, Number, Number]\n  const darkenRgb = curry((amount, rgb) =>\n    rgb.map(c => Math.round(Math.min(Math.max(0, c + (c * -amount)), 255)))\n  );\n\n  // lightenRgb :: [Number, Number, Number] -> [Number, Number, Number]\n  const lightenRgb = curry((amount, rgb) =>\n    rgb.map(c => Math.round(Math.min(Math.max(0, c + (c * amount)), 255)))\n  );\n\n  // darkenHsl :: [Number, Number, Number] -> [Number, Number, Number]\n  const darkenHsl = curry((amount, [h, s, l]) => {\n    return [h, s, clampNorm(l - (l * amount))];\n  });\n\n  // lightenHsl :: [Number, Number, Number] -> [Number, Number, Number]\n  const lightenHsl = curry((amount, [h, s, l]) => {\n    return [h, s, clampNorm(l + (l * amount))];\n  });\n\n  // lightenHex :: String -> [Number, Number, Number]\n  const lightenHex = curry((amount, hex) => pipe(\n    hex2rgb,\n    lightenRgb(amount),\n    rgb2hex\n  )(hex));\n\n  // darkenHex :: String -> [Number, Number, Number]\n  const darkenHex = curry((amount, hex) => pipe(\n    hex2rgb,\n    darkenRgb(amount),\n    rgb2hex\n  )(hex));\n\n  // lerp3 :: Int -> [Number, Number, Number] -> [Number, Number, Number] -> [Number, Number, Number]\n  const lerp3 = curry((t, [a1, b1, c1], [a2, b2, c2]) => [\n    a1 + t * (a2 - a1),\n    b1 + t * (b2 - b1),\n    c1 + t * (c2 - c1),\n  ]);\n\n  // linearGradient :: Int -> [Number, Number, Number] -> [Number, Number, Number] -> [[Number, Number, Number]]\n  const linearGradient = curry((n, c1, c2) => {\n    const d = (n-1 !== 0) ? n-1 : 1;\n    return Array.from(Array(n), (_, i) => lerp3(i / d, c1, c2));\n  });\n\n  // gradient :: Function -> Int -> [Number, Number, Number] -> [Number, Number, Number] -> [[Number, Number, Number]]\n  const gradient = curry((ease, n, c1, c2) => {\n    const d = (n-1 !== 0) ? n-1 : 1;\n    return Array.from(Array(n), (_, i) => lerp3(ease(i / d), c1, c2));\n  });\n\n  // multiGradient :: Int -> [[Number, Number, Number]] -> [[Number, Number, Number]]\n  const multiGradient = curry((n, colors) => {\n    return colors.reduce((grad, col, i) => {\n      if (i === 0) return grad;\n      const roundingFn = (i === colors.length-1 || i === 1)\n        ? Math.ceil\n        : Math.round;\n\n      const col1 = colors[i-1];\n      const col2 = col;\n\n      return [\n        ...grad,\n        ...linearGradient(roundingFn(n/(colors.length - 1)), col1, col2)\n      ];\n    }, []);\n  });\n\n  // rGradient :: Function -> Int -> [Number, Number, Number] -> [Number, Number, Number] -> [[Int, Int, Int]]\n  const rGradient = curry((ease, n, c1, c2) => gradient(ease, n, c1, c2).map(color => color.map(Math.round)));\n\n  // rLinearGradient :: Int -> [Number, Number, Number] -> [Number, Number, Number] -> [[Int, Int, Int]]\n  const rLinearGradient = curry((n, c1, c2) => linearGradient(n, c1, c2).map(color => color.map(Math.round)));\n\n  // multiGradient :: Int -> [[Number, Number, Number]] -> [[Int, Int, Int]]\n  const rMultiGradient = curry((n, colors) => multiGradient(n, colors).map(color => color.map(Math.round)));\n\n  // complimentHsl :: Int -> [Number, Number, Number] -> [Number, Number, Number]\n  const complimentHsl = curry((n, [h, s, l]) => Array.from(Array(n), (_, i) => [\n    wrapNorm(h - (i/n)),\n    s,\n    l\n  ]));\n\n  // complimentRgb :: Int -> [Number, Number, Number] -> [Number, Number, Number]\n  const complimentRgb = curry((n, rgb) => pipe(\n    rgb2hsl,\n    complimentHsl(n),\n    rgbs => rgbs.map(hsl2rgb),\n  )(rgb));\n\n  // complimentHex :: Int -> String -> [String]\n  const complimentHex = curry((n, hex) => pipe(\n    hex2hsl,\n    complimentHsl(n),\n    hsls => hsls.map(hsl2hex),\n  )(hex));\n\n  // rgb2css :: Number -> [Number, Number, Number] -> String\n  const rgb2css = curry((alpha, rgb) => {\n    const a = typeof alpha === 'number' ? clampNorm(alpha) : 1;\n    const [r, g, b] = rgb.map(pipe(Math.round, clamp(0, 255)));\n    return `rgba(${r}, ${g}, ${b}, ${a})`;\n  });\n\n  // hsl2css :: Number -> [Number, Number, Number] -> String\n  const hsl2css = curry((alpha, [h, s, l]) => {\n    const a = typeof alpha === 'number' ? clampNorm(alpha) : 1;\n    const H = Math.round(h * 360);\n    const S = Math.round(s * 100);\n    const L = Math.round(l * 100);\n    return `hsl(${H}, ${S}%, ${L}%, ${a})`;\n  });\n\n  const polute = (target = window) => {\n    target.rgb2hsl = rgb2hsl;\n    target.hsl2rgb = hsl2rgb;\n    target.hex2rgb = hex2rgb;\n    target.rgb2hex = rgb2hex;\n    target.hex2hsl = hex2hsl;\n    target.hsl2hex = hsl2hex;\n    target.darkenRgb = darkenRgb;\n    target.lightenRgb = lightenRgb;\n    target.darkenHsl = darkenHsl;\n    target.lightenHsl = lightenHsl;\n    target.lightenHex = lightenHex;\n    target.darkenHex = darkenHex;\n    target.lerp3 = lerp3;\n    target.linearGradient = linearGradient;\n    target.gradient = gradient;\n    target.multiGradient = multiGradient;\n    target.rGradient = rGradient;\n    target.rLinearGradient = rLinearGradient;\n    target.rMultiGradient = rMultiGradient;\n    target.complimentHsl = complimentHsl;\n    target.complimentRgb = complimentRgb;\n    target.complimentHex = complimentHex;\n    target.rgb2css = rgb2css;\n    target.hsl2css = hsl2css;\n  };\n\n  exports.polute = polute;\n  exports.rgb2hsl = rgb2hsl;\n  exports.hsl2rgb = hsl2rgb;\n  exports.hex2rgb = hex2rgb;\n  exports.rgb2hex = rgb2hex;\n  exports.hex2hsl = hex2hsl;\n  exports.hsl2hex = hsl2hex;\n  exports.darkenRgb = darkenRgb;\n  exports.lightenRgb = lightenRgb;\n  exports.darkenHsl = darkenHsl;\n  exports.lightenHsl = lightenHsl;\n  exports.lightenHex = lightenHex;\n  exports.darkenHex = darkenHex;\n  exports.lerp3 = lerp3;\n  exports.linearGradient = linearGradient;\n  exports.gradient = gradient;\n  exports.multiGradient = multiGradient;\n  exports.rGradient = rGradient;\n  exports.rLinearGradient = rLinearGradient;\n  exports.rMultiGradient = rMultiGradient;\n  exports.complimentHsl = complimentHsl;\n  exports.complimentRgb = complimentRgb;\n  exports.complimentHex = complimentHex;\n  exports.rgb2css = rgb2css;\n  exports.hsl2css = hsl2css;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","const LAYERS = Object.freeze({\n  HUD: 0,\n  BG : 1,\n  MG : 2,\n  FG : 3\n});\n\nmodule.exports = Object.freeze({\n  LAYERS\n});\n","const posToGridIndex = ([x, y], gw) => {\n  return x + gw * y;\n};\n\nconst posFromGridIndex = (i, gw) => [(i % gw)|0, (i / gw)|0];\n\nconst pick = (props, obj) => {\n  const out = {};\n  for (const p of props) {\n    out[p] = obj[p];\n  }\n  return out;\n};\n\nconst fromify = cons => (...args) => new cons(...args);\n\nmodule.exports = {\n  posToGridIndex,\n  posFromGridIndex,\n  pick,\n  fromify\n};\n","class GameState {\n  constructor() {\n    this.state = {};\n  }\n\n  load(state) {\n    this.state = state;\n  }\n\n  serialize() {\n    return this.state;\n  }\n}\n\nmodule.exports = GameState;\n","class Input {\n  constructor() {\n    this.keyStates = {};\n    const keydownHandler = e => {\n      if (!this.keyStates[e.key]) {\n        this.keyStates[e.key] = {\n          state: true,\n          downThisFrame: true,\n          upThisFrame: false\n        };\n        return;\n      }\n\n      this.keyStates[e.key].state = true;\n      this.keyStates[e.key].downThisFrame = true;\n      this.keyStates[e.key].upThisFrame = false;\n    };\n\n    const keyupHandler = e => {\n      if (!this.keyStates[e.key]) {\n        this.keyStates[e.key] = {\n          state: false,\n          downThisFrame: false,\n          upThisFrame: true\n        };\n        return;\n      }\n\n      this.keyStates[e.key].state = false;\n      this.keyStates[e.key].downThisFrame = false;\n      this.keyStates[e.key].upThisFrame = true;\n    };\n\n    document.addEventListener('keydown', keydownHandler);\n    document.addEventListener('keyup', keyupHandler);\n\n    this.cleanup = () => {\n      document.removeEventListener('keydown', keydownHandler);\n      document.removeEventListener('keyup', keyupHandler);\n    };\n  }\n\n  keyIsDown(key) {\n    if (!(key in this.keyStates)) {\n      this.keyStates[key] = {\n        state: false,\n        downThisFrame: false,\n        upThisFrame: false\n      };\n      return false;\n    }\n    return this.keyStates[key].state;\n  }\n\n  keyPressed(key) {\n    return this.keyIsDown(key) && this.keyStates.downThisFrame;\n  }\n\n  keyReleased(key) {\n    return !this.keyIsDown(key) && this.keyStates.upThisFrame;\n  }\n\n  update() {\n    Object.values(this.keyStates).forEach(ks => {\n      ks.downThisFrame = false;\n      ks.upThisFrame = false;\n    });\n  }\n}\n\nmodule.exports = Input;","class PubSub {\n  constructor() {\n    this.topics = {};\n    this._nextId = 0;\n  }\n\n  nextId() {\n    return this._nextId++;\n  }\n\n  subscribe(topic, handler) {\n    if (!(topic in this.topics)) {\n      this.topics[topic] = {};\n    }\n\n    const fixedId = this.nextId();\n    this.topics[topic][fixedId] = handler;\n\n    return () => {\n      delete this.topics[topic][fixedId];\n    }\n  }\n\n  publish(topic, data) {\n    if (topic in this.topics) {\n      Object.values(this.topics[topic]).forEach(fn => fn(data));\n    }\n  }\n}\n\nmodule.exports = PubSub;\n","const {pick} = require('./util');\n\nconst FONT = `'Source Code Pro', monospace`;\n\nclass Renderer {\n  constructor(canvas, canvasWidth, canvasHeight) {\n    canvas.height = canvasHeight;\n    canvas.width = canvasWidth;\n\n    this._styleStack = [];\n    this.ctx = canvas.getContext('2d');\n    this.ctx.textBaseline = 'top';\n\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n\n    this.setTileSize(20);\n\n    this.buffers = [ [], [], [], [] ];\n  }\n\n  commit() {\n    this.pushStyle();\n    for (let i = 0; i < this.buffers.length; i++) {\n      while (this.buffers[i].length) {\n        const {pos, color, char, draw} = this.buffers[i].pop();\n        if (draw) {\n          this.ctx.fillStyle = color;\n          this.ctx.fillText(char, pos[0], pos[1]);\n        }\n      }\n    }\n    this.popStyle();\n  }\n\n  pushStyle() {\n    const props = ['fillStyle', 'strokeStyle', 'font', 'filter', 'lineWidth'];\n    this._styleStack.push(pick(props, this.ctx));\n  }\n\n  popStyle() {\n    if (this._styleStack.length > 0) {\n      const entries = Object.entries(this._styleStack.pop());\n      for (const [key, value] of entries) {\n        this.ctx[key] = value;\n      }\n    } else {\n      throw new RangeError(`No styles to pop in the stack`);\n    }\n  }\n\n  setTileSize(size) {\n    if (size !== this.size) {\n      this.size = size;\n      this.ctx.font = `${this.size}px ${FONT}`;\n    }\n  }\n\n  clearBackground(col) {\n    this.pushStyle();\n    this.ctx.fillStyle = col;\n    this.ctx.beginPath()\n    this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n    this.ctx.fill();\n    this.ctx.closePath();\n    this.popStyle();\n  }\n\n  drawTile({char, color, zPos}, pos) {\n    this.buffers[zPos].unshift({\n      pos,\n      char,\n      color,\n      draw: true\n    });\n  }\n\n  drawRect(fill, stroke, [x, y], w, h, strokeWeight = 1) {\n    this.pushStyle();\n    this.ctx.fillStyle = fill;\n    this.ctx.strokeStyle = stroke;\n    this.ctx.lineWidth = strokeWeight;\n\n    this.ctx.fillRect(x, y, w, h);\n    this.ctx.rect(x, y, w, h);\n    this.ctx.stroke();\n    this.popStyle();\n  }\n\n  drawCircle(fill, stroke, [x, y], r, strokeWeight = 1) {\n    this.pushStyle();\n    this.ctx.fillStyle = fill;\n    this.ctx.strokeStyle = stroke;\n    this.ctx.lineWidth = strokeWeight;\n\n    this.ctx.beginPath();\n    this.ctx.ellipse(x, y, r, r, 0, 0, Math.PI*2, false);\n    this.ctx.stroke();\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    this.popStyle();\n  }\n}\n\nmodule.exports = Renderer;\n","const {vAdd, vScale} = require('vec-la-fp');\n\nconst GameState = require('./GameState');\nconst Input = require('./Input');\nconst PubSub = require('./PubSub');\nconst Renderer = require('./Renderer');\nconst {posToGridIndex} = require('./util');\n\nclass Game {\n  constructor(canvasId, canvasWidth, canvasHeight) {\n    const events = new PubSub();\n    this.subscribe = events.subscribe.bind(events);\n    this.publish = events.publish.bind(events);\n\n    const canvas = document.getElementById(canvasId);\n    this.renderer = new Renderer(canvas, canvasWidth, canvasHeight);\n\n    this.area = null;\n\n    this.input = new Input();\n    this.state = new GameState();\n\n    this.deltaTime = 0;\n    this.lastTime = Date.now();\n    this.frames = 0;\n    this.boundDraw = this.draw.bind(this);\n\n    this.onUpdate = () => {};\n    this.onDraw = () => {};\n  }\n\n  createScreenRegion(pos, getTileSize) {\n    return tileXY => vAdd(vScale(getTileSize(), tileXY), pos);\n  }\n\n  setCurrentArea(area) {\n    this.area = area;\n    this.renderer.setTileSize(area.size);\n  }\n\n  getTile(pos) {\n    const [x, y] = pos;\n    const {width:w, height:h} = this.area;\n    if (x >= w || y >= h || x < 0 || y < 0) return null;\n    const index = posToGridIndex(pos, w)\n    return this.area.grid[index];\n  }\n\n  start() {\n    requestAnimationFrame(this.boundDraw);\n  }\n\n  draw() {\n    this.deltaTime += Date.now() - this.lastTime;\n    if (this.deltaTime >= 16) {\n      this.deltaTime = 0;\n      this.frames++;\n\n      this.publish('@@FRAME_BEFORE_UPDATE');\n      this.onUpdate();\n\n      this.publish('@@FRAME_BEFORE_DRAW');\n      this.onDraw();\n\n      this.publish('@@FRAME_BEFORE_RENDER_COMMIT');\n      this.renderer.commit();\n\n      // Reset the frame values for input\n      this.input.update();\n\n      this.publish('@@FRAME_COMPLETE');\n    }\n\n    requestAnimationFrame(this.boundDraw);\n  }\n}\n\nmodule.exports = Game;\n","const {posToGridIndex, fromify} = require('./util');\n\nclass Area {\n  constructor(width, height, offset, size) {\n    this.width = width;\n    this.height = height;\n    this.offset = offset;\n    this.size = size;\n\n    this.grid = [];\n\n    this.actors = [];\n\n    this.items = [];\n\n    this.handlers = {};\n  }\n\n  setGrid(grid) {\n    this.grid = grid;\n  }\n\n  setGridAtPos(tile, pos) {\n    const i = posToGridIndex(pos, this.width);\n    if (i >= this.grid.length) {\n      throw new RangeError(`Can't set out of range index ${i} (${x}, ${y}) on grid with only ${this.grid.length} tiles`);\n    }\n    this.grid[i] = tile;\n  }\n}\n\nArea.from = fromify(Area);\n\nmodule.exports = Area;\n","const {fromify} = require('./util');\nconst {LAYERS} = require('./constants');\n\nclass Tile {\n  constructor(char, color, zPos = LAYERS.BG) {\n    this.char = char;\n    this.color = color;\n    this.zPos = zPos;\n    this.properties = [];\n  }\n\n  hasProperty(prop) {\n    return this.properties.includes(prop);\n  }\n\n  addProperty(prop) {\n    this.properties.push(prop);\n    return this;\n  }\n}\n\nTile.from = fromify(Tile);\n\nmodule.exports = Tile;\n","const {vAdd, vDist} = require('vec-la-fp');\nconst {darkenHex} = require('kandinsky-js');\n\nconst {LAYERS} = require('asc-engine/src/constants');\nconst {posFromGridIndex} = require('asc-engine/src/util');\nconst Game = require('asc-engine/src/Game');\nconst Area = require('asc-engine/src/Area');\nconst Tile = require('asc-engine/src/Tile');\n\nconst vEqual = ([x, y], [x2, y2]) => x === x2 && y === y2;\n\nconst game = new Game('main', 1000, 700);\nconst toGameArea = game.createScreenRegion([12*20, 2*20], () => game.area.size);\nconst toTitleArea = game.createScreenRegion([0, 0], () => game.area.size);\nconst toScoreArea = game.createScreenRegion([40*20, 0], () => game.area.size);\n\nconst snake = {\n  tile: new Tile('@', '#ff0000', LAYERS.FG),\n  body: [[13, 17]],\n  dir: [0, -1],\n  getHead: () => snake.body[0],\n  reset: () => snake.body = [[13, 17]]\n};\n\nlet food = {\n  tile: new Tile('*', '#0f0'),\n  pos: [1 + Math.floor(Math.random() * 24), 1 + Math.floor(Math.random() * 31)],\n  next: () => food.pos = [1 + Math.floor(Math.random() * 24), 1 + Math.floor(Math.random() * 31)]\n}\n\nconst title = new Tile('S . N . A . K . E', '#f11', LAYERS.HUD);\nconst scoreTile = new Tile('Score: 0', '#0f0', LAYERS.HUD);\n\nlet score = 0;\n\nconst speed = 5;\nconst FRAME_TIME = 16.6;\nlet lastTime = Date.now();\nlet currentTime = lastTime;\n\nconst UP = [0, -1];\nconst DOWN = [0, 1];\nconst LEFT = [-1, 0];\nconst RIGHT = [1, 0];\n\ngame.onUpdate = function () {\n  if (game.input.keyIsDown('ArrowUp') && !vEqual(snake.dir, DOWN)) {\n    snake.dir = UP;\n  } else if (game.input.keyIsDown('ArrowDown') && !vEqual(snake.dir, UP)) {\n    snake.dir = DOWN;\n  } else if (game.input.keyIsDown('ArrowLeft') && !vEqual(snake.dir, RIGHT)) {\n    snake.dir = LEFT;\n  } else if (game.input.keyIsDown('ArrowRight') && !vEqual(snake.dir, LEFT)) {\n    snake.dir = RIGHT;\n  }\n\n  currentTime = Date.now();\n  if (currentTime - lastTime >= FRAME_TIME * speed) {\n    lastTime = currentTime;\n\n    let head = snake.getHead();\n    let targetPos = vAdd(head, snake.dir);\n    const targetTile = game.getTile(targetPos);\n\n    const hit = targetTile.properties.includes('SOLID') || snake.body.slice(1).some(p => vEqual(targetPos, p));\n\n    if (!hit) {\n      for(let i = 0; i < snake.body.length; i++) {\n        let oldPos = snake.body[i];\n        snake.body[i] = targetPos;\n        targetPos = oldPos;\n      }\n      head = snake.getHead();\n      if (vEqual(head, food.pos)) {\n        food.next();\n        snake.body.push(head);\n        score += 10;\n        scoreTile.char = `Score: ${score}`;\n      }\n    } else {\n      snake.reset();\n      score = 0;\n      scoreTile.char = 'Score: 0';\n    }\n  }\n};\n\ngame.onDraw = function () {\n  this.renderer.clearBackground('#000');\n  this.renderer.setTileSize(this.area.size);\n\n  this.area.grid.forEach((t, i) => {\n    const pos = toGameArea(\n      posFromGridIndex(i, this.area.width, this.area.height)\n    );\n    this.renderer.drawTile(t, pos);\n  });\n\n  snake.body.forEach((p, i) => {\n    const pc = Math.max(0, (i / snake.body.length) - 0.2);\n    const tile = {...snake.tile};\n    tile.color = darkenHex(pc, tile.color);\n    game.renderer.drawTile(tile, toGameArea(p))\n  });\n  game.renderer.drawTile(food.tile, toGameArea(food.pos));\n\n  game.renderer.drawTile(title, toTitleArea([1, 1]));\n  game.renderer.drawTile(scoreTile, toScoreArea([0, 1]));\n}\n\nconst renderEffects = () => {\n  const pos = toGameArea(snake.getHead());\n  const s = Math.ceil(snake.body.length**0.5);\n  game.renderer.buffers[LAYERS.BG].forEach(cell => {\n    if (vDist(cell.pos, pos) > s * game.area.size) {\n      cell.color = darkenHex(\n        cell.char === '.' ? 0.75 : 0.35,\n        cell.color\n      );\n    }\n  })\n};\n\nconst S = Tile.from('#', '#999999');\nS.addProperty('SOLID');\nconst F = Tile.from('.', '#aaaaaa');\nconst tiles = [\n  S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,S,\n  S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,S,\n];\n\nconst gameArea = new Area(26, 33, [0, 0], 20);\n\ngameArea.setGrid(tiles);\ngame.setCurrentArea(gameArea);\ngame.start();\n\n\n\ngame.subscribe('@@FRAME_BEFORE_RENDER_COMMIT', renderEffects);\n"]}